@model RoomBookingSysytem1.Models.ClientModel

@{
    ViewBag.Title = "Signup";
    Layout = "~/Views/Shared/_AccountsLayout.cshtml";
}
<section class="card" style="background-color: rgba(0, 0, 0, 0.5); color:azure">
    <div class="card-body">
        <h2>Signup</h2>

        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        <h4>If u already have an account please use Sign in.</h4>
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control", @placeholder = "Enter First name", @id = "Firstname", @onfocusout = "chkFirstname()" } })
                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" ,@placeholder = "Enter Last name", @id = "Lastname", @onfocusout = "chkLastname()" } })
                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DateOfBirth, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DateOfBirth, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DateOfBirth, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <label class="radio-inline">
                    @Html.RadioButtonFor(model => model.Gender, "Male") Male
                </label>
                <label class="radio-inline">
                    @Html.RadioButtonFor(model => model.Gender, "Female") Female
                </label>
                @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PhoneNumber, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PhoneNumber, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PhoneNumber, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label for="State" class="control-label col-md-2">State:</label>
            <div class="col-md-10">
                @Html.DropDownListFor(m => m.State, new SelectList(new[]
                {
                    new SelectListItem { Value = "", Text = "-- Select state --" },
                    new SelectListItem { Value = "KL", Text = "Kerala" },
                    new SelectListItem { Value = "KA", Text = "Karnataka" },
                    new SelectListItem { Value = "TN", Text = "Tamil Nadu" },
                }, "Value", "Text"), new { @class = "form-control", id = "state" })
            </div>
        </div>

        <div class="form-group">
            <label for="City" class="control-label col-md-2">City:</label>
            <div class="col-md-10">
                @Html.DropDownListFor(m => m.City, Enumerable.Empty<SelectListItem>(), new { @class = "form-control", id = "city", disabled = "disabled" })
            </div>
        </div>


        <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
        <script>
            $(document).ready(function () {
                // Define state-city mapping
                var stateCityMap = {
                    "KL": ["Kochi", "Thiruvananthapuram", "Kannur"],
                    "KA": ["Banglore", "Manglore", "Karkala"],
                    "TN": ["Chennai", "Tirchi"]
                };

                // Bind change event to state select
                $('#state').change(function () {
                    var state = $(this).val();
                    var cities = stateCityMap[state];
                    var $citySelect = $('#city');

                    // Clear and disable city select if no state selected
                    $citySelect.empty().prop('disabled', !state);

                    // Populate city select with options for selected state
                    if (cities) {
                        $.each(cities, function (index, city) {
                            $citySelect.append('<option value="' + city + '">' + city + '</option>');
                        });
                        $citySelect.prop('disabled', false);
                    }
                });
            });
        </script>

        <div class="form-group">
            @Html.LabelFor(model => model.Username, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Username, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Username, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ConfirmPassword, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
            </div>
        </div>



        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Sign up" class="btn btn-primary btn-lg" style="margin-top: 20px;" />
                <input type="reset" class="btn btn-primary btn-lg" style="margin-top: 20px;" />
            </div>
        </div>
    </div>
        }
    </div>
</section>
